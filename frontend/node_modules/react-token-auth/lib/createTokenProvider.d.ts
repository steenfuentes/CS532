import { IAsyncAuthStorage, IAuthStorage, Maybe } from './types';
export interface ITokenProviderConfig<T> {
    storageKey: string;
    storage: IAuthStorage;
}
export interface ITokenProvider<T> {
    getToken: () => Maybe<T>;
    setToken: (token: Maybe<T>) => void;
}
export declare const createTokenProvider: <T>({ storageKey, storage }: ITokenProviderConfig<T>) => ITokenProvider<T>;
export interface IAsyncTokenProviderConfig<T> {
    storageKey: string;
    storage: IAsyncAuthStorage;
}
export interface IAsyncTokenProvider<T> {
    getToken: () => Promise<Maybe<T>>;
    setToken: (token: Maybe<T>) => Promise<void>;
}
export declare const createAsyncTokenProvider: <T>({ storageKey, storage, }: IAsyncTokenProviderConfig<T>) => IAsyncTokenProvider<T>;
